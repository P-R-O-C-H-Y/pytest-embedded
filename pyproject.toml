[tool.commitizen]
name = "cz_conventional_commits"
version = "1.8.2"
tag_format = "v$version"
version_files = [
    "pytest-embedded/pytest_embedded/__init__.py",
    "pytest-embedded/pyproject.toml",
    "pytest-embedded-arduino/pytest_embedded_arduino/__init__.py",
    "pytest-embedded-arduino/pyproject.toml",
    "pytest-embedded-idf/pytest_embedded_idf/__init__.py",
    "pytest-embedded-idf/pyproject.toml",
    "pytest-embedded-jtag/pytest_embedded_jtag/__init__.py",
    "pytest-embedded-jtag/pyproject.toml",
    "pytest-embedded-qemu/pytest_embedded_qemu/__init__.py",
    "pytest-embedded-qemu/pyproject.toml",
    "pytest-embedded-serial/pytest_embedded_serial/__init__.py",
    "pytest-embedded-serial/pyproject.toml",
    "pytest-embedded-serial-esp/pytest_embedded_serial_esp/__init__.py",
    "pytest-embedded-serial-esp/pyproject.toml",
    "pytest-embedded-wokwi/pytest_embedded_wokwi/__init__.py",
    "pytest-embedded-wokwi/pyproject.toml",
]

[tool.isort]
profile = 'black'

[tool.ruff]
line-length = 120
target-version = "py37"

[tool.ruff.lint]
select = [
    'F',  # Pyflakes
    'E',  # pycodestyle
    'W',  # pycodestyle
#    'C90',  # mccabe
    'I',  # isort
#    'N',  # pep8-naming
#    'D',  # pydocstyle
    'UP',  # pyupgrade
    'YTT',  # flake8-2020
#    'ANN',  # flake8-annotations
#    'ASYNC',  # flake8-async
#    'TRIO',  # flake8-trio
#    'S',  # flake8-bandit
#    'BLE',  # flake8-blind-except
#    'FBT',  # flake8-boolean-trap
#    'B',  # flake8-bugbear
    'A',  # flake8-builtins
#    'COM',  # flake8-commas
#    'CPY',  # flake8-copyright
#    'C4',  # flake8-comprehensions
#    'DTZ',  # flake8-datetimez
#    'T10',  # flake8-debugger
#    'DJ',  # flake8-django
#    'EM',  # flake8-errmsg
#    'EXE',  # flake8-executable
#    'FA',  # flake8-future-annotations
#    'ISC',  # flake8-implicit-str-concat
#    'ICN',  # flake8-import-conventions
#    'G',  # flake8-logging-format
#    'INP',  # flake8-no-pep420
#    'PIE',  # flake8-pie
#    'T20',  # flake8-print
#    'PYI',  # flake8-pyi
#    'PT',  # flake8-pytest-style
#    'Q',  # flake8-quotes
#    'RSE',  # flake8-raise
#    'RET',  # flake8-return
#    'SLF',  # flake8-self
#    'SLOT',  # flake8-slots
#    'SIM',  # flake8-simplify
#    'TID',  # flake8-tidy-imports
#    'TCH',  # flake8-type-checking
#    'INT',  # flake8-gettext
    'ARG',  # flake8-unused-arguments
#    'PTH',  # flake8-use-pathlib
#    'TD',  # flake8-todos
#    'FIX',  # flake8-fixme
    'ERA',  # eradicate
#    'PD',  # pandas-vet
#    'PGH',  # pygrep-hooks
#    'PL',  # Pylint
#    'TRY',  # tryceratops
#    'FLY',  # flynt
#    'NPY',  # NumPy-specific rules
#    'AIR',  # Airflow
#    'PERF',  # Perflint
#    'FURB',  # refurb
    'LOG',  # flake8-logging
    'RUF',  # Ruff-specific rules
]

[tool.ruff.format]
quote-style = "single"
exclude = ["**/tests/*"]
docstring-code-format = true

[tool.pytest.ini_options]
norecursedirs = 'examples/*'
addopts = "-s"
